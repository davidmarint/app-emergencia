openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/main/emergencies/emergencies-type:
    get:
      operationId: main_emergencies_emergencies_type_list
      tags:
      - emergencies
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergenciesType'
          description: ''
    post:
      operationId: main_emergencies_emergencies_type_create
      tags:
      - emergencies
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                icon:
                  type: string
                  format: binary
                name:
                  type: string
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergenciesType'
          description: ''
  /api/main/emergencies/emergency:
    get:
      operationId: main_emergencies_emergency_list
      tags:
      - emergencies
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emergency'
          description: ''
    post:
      operationId: main_emergencies_emergency_create
      tags:
      - emergencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emergency'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Emergency'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Emergency'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emergency'
          description: ''
  /api/main/users/current/:
    get:
      operationId: main_users_current_retrieve
      description: Obtiene el Usuario Actual utilizando el token en el HEADER
      summary: Obtiene el Usuario Actual utilizando el token en el HEADER
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          description: Usted no tiene permiso para ver este usuario
  /api/main/users/generate-code:
    post:
      operationId: main_users_generate_code_create
      tags:
      - main
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordRequest'
          description: ''
  /api/main/users/login/:
    post:
      operationId: main_users_login_create
      description: Iniciar Sesi√≥n
      tags:
      - Authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenOutput'
          description: ''
  /api/main/users/recover-password-code:
    post:
      operationId: main_users_recover_password_code_create
      tags:
      - main
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/main/users/refresh/:
    post:
      operationId: main_users_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - Authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/main/users/register/:
    post:
      operationId: main_users_register_create
      description: Registrar un nuevo Usuario
      summary: Registrar un nuevo Usuario
      tags:
      - Authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/main/users/users/{id}/:
    get:
      operationId: main_users_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: main_users_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/main/users/validate-code:
    post:
      operationId: main_users_validate_code_create
      tags:
      - main
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordCodeValidateRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordCodeValidateRequest'
          description: ''
components:
  schemas:
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    EmergenciesType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 220
        icon:
          type: string
          format: uri
      required:
      - icon
      - id
      - name
    Emergency:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        latitude:
          type: string
          maxLength: 20
        longitude:
          type: string
          maxLength: 20
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        emergency_type:
          type: integer
      required:
      - created_at
      - emergency_type
      - id
      - latitude
      - longitude
      - user
    ResetPassword:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    ResetPasswordCodeValidateRequest:
      type: object
      properties:
        code:
          type: integer
        email:
          type: string
          format: email
      required:
      - code
      - email
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    StatusEnum:
      enum:
      - active
      - inactive
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
    TokenOutput:
      type: object
      properties:
        refresh:
          type: string
          title: Refresh token
        access:
          type: string
          title: Access token
      required:
      - access
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        number_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      required:
      - email
      - id
    UserCreate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        number_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 128
      required:
      - email
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
