/**
 * ASI API
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GCMDevice from '../models/GCMDevice';

/**
* Devices service.
* @module api/DevicesApi
* @version 1.0.0
*/
export default class DevicesApi {

    /**
    * Constructs a new DevicesApi. 
    * @alias module:api/DevicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mainDevicesAndroidCreate operation.
     * @callback module:api/DevicesApi~mainDevicesAndroidCreateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Registra un dispositivo android recibir las notificaciones push
     * Registra un dispositivo android para recibir las notificaciones push
     * @param {module:models/GCMDevice} gCMDevice 
     * @param {module:api/DevicesApi~mainDevicesAndroidCreateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mainDevicesAndroidCreate(gCMDevice, callback) {
      let postBody = gCMDevice;
      // verify the required parameter 'gCMDevice' is set
      if (gCMDevice === undefined || gCMDevice === null) {
        throw new Error("Missing the required parameter 'gCMDevice' when calling mainDevicesAndroidCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/main/devices/android/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mainDevicesIosCreate operation.
     * @callback module:api/DevicesApi~mainDevicesIosCreateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Registra un dispositivo ios recibir las notificaciones push
     * Registra un dispositivo ios recibir las notificaciones push
     * @param {module:models/GCMDevice} gCMDevice 
     * @param {module:api/DevicesApi~mainDevicesIosCreateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mainDevicesIosCreate(gCMDevice, callback) {
      let postBody = gCMDevice;
      // verify the required parameter 'gCMDevice' is set
      if (gCMDevice === undefined || gCMDevice === null) {
        throw new Error("Missing the required parameter 'gCMDevice' when calling mainDevicesIosCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/main/devices/ios/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mainDevicesUnlinkAndroidDeviceCreate operation.
     * @callback module:api/DevicesApi~mainDevicesUnlinkAndroidDeviceCreateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Elimina un dispositivo android para recibir las notificaciones push
     * Elimina un dispositivo android para recibir las notificaciones push
     * @param {module:models/GCMDevice} gCMDevice 
     * @param {module:api/DevicesApi~mainDevicesUnlinkAndroidDeviceCreateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mainDevicesUnlinkAndroidDeviceCreate(gCMDevice, callback) {
      let postBody = gCMDevice;
      // verify the required parameter 'gCMDevice' is set
      if (gCMDevice === undefined || gCMDevice === null) {
        throw new Error("Missing the required parameter 'gCMDevice' when calling mainDevicesUnlinkAndroidDeviceCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/main/devices/unlink-android-device/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the mainDevicesUnlinkIosDeviceCreate operation.
     * @callback module:api/DevicesApi~mainDevicesUnlinkIosDeviceCreateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Elimina un dispositivo ios para recibir las notificaciones push
     * Elimina un dispositivo ios para recibir las notificaciones push
     * @param {module:models/GCMDevice} gCMDevice 
     * @param {module:api/DevicesApi~mainDevicesUnlinkIosDeviceCreateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    mainDevicesUnlinkIosDeviceCreate(gCMDevice, callback) {
      let postBody = gCMDevice;
      // verify the required parameter 'gCMDevice' is set
      if (gCMDevice === undefined || gCMDevice === null) {
        throw new Error("Missing the required parameter 'gCMDevice' when calling mainDevicesUnlinkIosDeviceCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/main/devices/unlink-ios-device/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
