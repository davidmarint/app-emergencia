/**
 * ASI API
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReadOnlyImages from './ReadOnlyImages';
import StatusEnum from './StatusEnum';

/**
 * The Emergency model module.
 * @module models/Emergency
 * @version 1.0.0
 */
class Emergency {
    /**
     * Constructs a new <code>Emergency</code>.
     * @alias module:models/Emergency
     * @param emergencyType {Number} 
     * @param company {Number} 
     */
    constructor(emergencyType, company) { 
        
        Emergency.initialize(this, emergencyType, company);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, emergencyType, company) { 
        obj['emergency_type'] = emergencyType;
        obj['company'] = company;
    }

    /**
     * Constructs a <code>Emergency</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/Emergency} obj Optional instance to populate.
     * @return {module:models/Emergency} The populated <code>Emergency</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Emergency();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Date');
            }
            if (data.hasOwnProperty('finish_time')) {
                obj['finish_time'] = ApiClient.convertToType(data['finish_time'], 'Date');
            }
            if (data.hasOwnProperty('register_date')) {
                obj['register_date'] = ApiClient.convertToType(data['register_date'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('emergency_type')) {
                obj['emergency_type'] = ApiClient.convertToType(data['emergency_type'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], StatusEnum);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [ReadOnlyImages]);
            }
            if (data.hasOwnProperty('user_created_id')) {
                obj['user_created_id'] = ApiClient.convertToType(data['user_created_id'], 'Number');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'Number');
            }
            if (data.hasOwnProperty('control_point')) {
                obj['control_point'] = ApiClient.convertToType(data['control_point'], 'Number');
            }
            if (data.hasOwnProperty('extra_category')) {
                obj['extra_category'] = ApiClient.convertToType(data['extra_category'], 'String');
            }
            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Emergency</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Emergency</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Emergency.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['latitude'] && !(typeof data['latitude'] === 'string' || data['latitude'] instanceof String)) {
            throw new Error("Expected the field `latitude` to be a primitive type in the JSON string but got " + data['latitude']);
        }
        // ensure the json data is a string
        if (data['longitude'] && !(typeof data['longitude'] === 'string' || data['longitude'] instanceof String)) {
            throw new Error("Expected the field `longitude` to be a primitive type in the JSON string but got " + data['longitude']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                ReadOnlyImages.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['extra_category'] && !(typeof data['extra_category'] === 'string' || data['extra_category'] instanceof String)) {
            throw new Error("Expected the field `extra_category` to be a primitive type in the JSON string but got " + data['extra_category']);
        }
        // ensure the json data is a string
        if (data['avatar_url'] && !(typeof data['avatar_url'] === 'string' || data['avatar_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_url` to be a primitive type in the JSON string but got " + data['avatar_url']);
        }

        return true;
    }


}

Emergency.RequiredProperties = ["emergency_type", "company"];

/**
 * @member {Number} id
 */
Emergency.prototype['id'] = undefined;

/**
 * @member {String} latitude
 */
Emergency.prototype['latitude'] = undefined;

/**
 * @member {String} longitude
 */
Emergency.prototype['longitude'] = undefined;

/**
 * @member {Date} start_time
 */
Emergency.prototype['start_time'] = undefined;

/**
 * @member {Date} finish_time
 */
Emergency.prototype['finish_time'] = undefined;

/**
 * @member {Date} register_date
 */
Emergency.prototype['register_date'] = undefined;

/**
 * @member {String} description
 */
Emergency.prototype['description'] = undefined;

/**
 * @member {Number} emergency_type
 */
Emergency.prototype['emergency_type'] = undefined;

/**
 * @member {module:models/StatusEnum} status
 */
Emergency.prototype['status'] = undefined;

/**
 * @member {Array.<module:models/ReadOnlyImages>} images
 */
Emergency.prototype['images'] = undefined;

/**
 * @member {Number} user_created_id
 */
Emergency.prototype['user_created_id'] = undefined;

/**
 * @member {Number} company
 */
Emergency.prototype['company'] = undefined;

/**
 * @member {Number} control_point
 */
Emergency.prototype['control_point'] = undefined;

/**
 * Categoría adicional definida en la compañía
 * @member {String} extra_category
 */
Emergency.prototype['extra_category'] = undefined;

/**
 * @member {String} avatar_url
 */
Emergency.prototype['avatar_url'] = undefined;






export default Emergency;

