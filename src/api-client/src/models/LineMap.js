/**
 * ASI API
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GisFeatureEnum from './GisFeatureEnum';
import LineMapGeometry from './LineMapGeometry';
import LineMapProperties from './LineMapProperties';

/**
 * The LineMap model module.
 * @module models/LineMap
 * @version 1.0.0
 */
class LineMap {
    /**
     * Constructs a new <code>LineMap</code>.
     * @alias module:models/LineMap
     */
    constructor() { 
        
        LineMap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineMap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/LineMap} obj Optional instance to populate.
     * @return {module:models/LineMap} The populated <code>LineMap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineMap();

            if (data.hasOwnProperty('type')) {
                obj['type'] = GisFeatureEnum.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('geometry')) {
                obj['geometry'] = LineMapGeometry.constructFromObject(data['geometry']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = LineMapProperties.constructFromObject(data['properties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineMap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineMap</code>.
     */
    static validateJSON(data) {
        // validate the optional field `geometry`
        if (data['geometry']) { // data not null
          LineMapGeometry.validateJSON(data['geometry']);
        }
        // validate the optional field `properties`
        if (data['properties']) { // data not null
          LineMapProperties.validateJSON(data['properties']);
        }

        return true;
    }


}



/**
 * @member {module:models/GisFeatureEnum} type
 */
LineMap.prototype['type'] = undefined;

/**
 * @member {Number} id
 */
LineMap.prototype['id'] = undefined;

/**
 * @member {module:models/LineMapGeometry} geometry
 */
LineMap.prototype['geometry'] = undefined;

/**
 * @member {module:models/LineMapProperties} properties
 */
LineMap.prototype['properties'] = undefined;






export default LineMap;

