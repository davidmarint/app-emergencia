/**
 * ASI API
 * API Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AsiApi);
  }
}(this, function(expect, AsiApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AsiApi.Company();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Company', function() {
    it('should create an instance of Company', function() {
      // uncomment below and update the code to test Company
      //var instance = new AsiApi.Company();
      //expect(instance).to.be.a(AsiApi.Company);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "full_name")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property nit (base name: "nit")', function() {
      // uncomment below and update the code to test the property nit
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property menus (base name: "menus")', function() {
      // uncomment below and update the code to test the property menus
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logo_url")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property backgroundUrl (base name: "background_url")', function() {
      // uncomment below and update the code to test the property backgroundUrl
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property wikiIconUrl (base name: "wiki_icon_url")', function() {
      // uncomment below and update the code to test the property wikiIconUrl
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property wikiTitle (base name: "wiki_title")', function() {
      // uncomment below and update the code to test the property wikiTitle
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property emergenciesAllowed (base name: "emergencies_allowed")', function() {
      // uncomment below and update the code to test the property emergenciesAllowed
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property extraZones (base name: "extra_zones")', function() {
      // uncomment below and update the code to test the property extraZones
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property extraPoints (base name: "extra_points")', function() {
      // uncomment below and update the code to test the property extraPoints
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property extraLines (base name: "extra_lines")', function() {
      // uncomment below and update the code to test the property extraLines
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property requiredEmergencyControlPoint (base name: "required_emergency_control_point")', function() {
      // uncomment below and update the code to test the property requiredEmergencyControlPoint
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property extraEmergencyCategories (base name: "extra_emergency_categories")', function() {
      // uncomment below and update the code to test the property extraEmergencyCategories
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property incidentTypes (base name: "incident_types")', function() {
      // uncomment below and update the code to test the property incidentTypes
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

    it('should have the property organizedCategories (base name: "organized_categories")', function() {
      // uncomment below and update the code to test the property organizedCategories
      //var instance = new AsiApi.Company();
      //expect(instance).to.be();
    });

  });

}));
